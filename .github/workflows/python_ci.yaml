name: python_app-cicd

on:
  push:
    branches:
      - master
      - lab*
  pull_request:
    branches:
      - master
      - lab*

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    env:
      working_dir: app_python
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies 
        run: pip install -r ${{ env.working_dir }}/requirements.txt
        
      - name: flake8 lint
        run: flake8 ${{ env.working_dir }}/moscow_time/
        
      - name: tests
        run: pytest ${{ env.working_dir }}/moscow_time/

  security:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    env:
      working_dir: app_python
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ env.working_dir }}/snyk.sarif

  docker:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    env:
      working_dir: app_python
      repo_name: moscow_app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.working_dir }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.repo_name }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.repo_name }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.repo_name }}:buildcache,mode=max
      
